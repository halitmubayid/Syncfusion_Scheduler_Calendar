@using Syncfusion.EJ2
@using Syncfusion.EJ2.Schedule
@model Syncfusion_Scheduler_Calendar.Models.CarLoadChart

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Index</h2>
@(Html.EJS().Schedule("schedule")
        .Width("100%")
        .Height("700px")
        .DateFormat("dd/MM/yyyy")
        .CurrentView(View.TimelineMonth).Views(view =>
        {
            view.Option(View.TimelineMonth)
            .EventTemplate("#timeline-event-template")
            .Add();
        })
        .Group(group => group.Resources(ViewBag.Resources))
        .EventSettings(new ScheduleEventSettings { DataSource = ViewBag.DataSource })
        .EditorTemplate("#EventEditorTemplate")
        .Resources(res =>
        {
            res.AllowMultiple(true)
            .DataSource(ViewBag.Cars)
            .Field("CarId")
            .Title("Car")
            .Name("Cars")
            .TextField("Name")
            .IdField("Id")
            .ColorField("Color")
            .Add();
        })
        .WorkDays(new int[] { 0, 1, 2, 3, 4 })
        .FirstDayOfWeek(0)
        .SelectedDate(ViewBag.StartDateTime)
        .MinDate(ViewBag.StartDateTime)
        .MaxDate(ViewBag.EndDateTime)
        .DateHeaderTemplate("#DateHeaderTemplate")
        .CssClass("schedule-cell-CostDimension")
        //.ActionBegin("onActionBegin")
        .EventRendered("onEventRendered")
        .ShowQuickInfo(false)
        .Render()
)

<script id="DateHeaderTemplate" type="text/template">
    <div class="date-text">${getDateHeaderText(data.date)}</div>
</script>

<script>
    function getDateHeaderText(date) {
        return instance.formatDate(date, { skeleton: 'Ed' });
    }
</script>

<script type="text/javascript">
    var instance = new ej.base.Internationalization();
    function getCellHeaderContent(date) {
        //console.log(date);
        return instance.formatDate(date, { skeleton: "Ed" });
    }
</script>

<script id="timeline-event-template" type="text/x-template">
    ${getEventContent(data)}
</script>

<script id="EventEditorTemplate" type="text/x-template">
    <div id="dddd">
        <div class="e-cell-content">
            <div class="quick-info-title"></div>
            <div class="m-portlet__body">
                <div class="form-group m-form__group row">
                    <div class="col-lg-12 mt-4">
                        <label>Cost Center</label>

                        @Html.DropDownListFor(model => model.CostCenterId, (SelectList)ViewBag.V_CostCenter, new { @class = "form-control  m-input select2 mt-2 CostCenter_Id", @placeholder = "" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script>
    function getEventContent(data) {
        debugger
        var content = "";

        if (data.StartTime.getDay() == 5 || data.StartTime.getDay() == 6) content = content + "<div class='template-wrap' style='background-color: rgb(241, 156, 187);'>";
        else if (data.Id != 0) content = content + "<div class='template-wrap' style='background-color: rgb(113, 106, 202);'>";
        else if (data.Id == 0) content = content + "<div class='template-wrap' style='background-color: rgba(177, 173, 230,0.8);color: #111;'>";

        return content + "<div class='subject'>" + data.Subject + " / " + data.CostCenter + "</div></div>";
    }
    /*function getEventContent(data) {
        debugger
        return "<div class='subject' style='font-size: 16px;'>" + data.Subject + "</div>";
    }*/
</script>

<script>
    function onActionBegin(e) {
        debugger
        if (e.data) {
            console.log(e.data);

            var formData = new FormData();

            formData.append("Id", e.data[0].Id);
            //formData.append("CostCenterID", CostCenterID);
            //formData.append("CostCenter", CostCenter);
            formData.append("StartTime", new Date(e.data[0].StartTime.getTime() + (3600000 * 5)).toISOString());
            formData.append("EndTime", new Date(e.data[0].EndTime.getTime() + (3600000 * 5)).toISOString());
            formData.append("IsAllDay", true);
            //formData.append("MyGuid", e.data[0].MyGuid);
            formData.append("CarId", e.data[0].CarId);

            $.ajax({
                type: "POST",
                url: "/home/LoadChartSave",
                processData: false,
                contentType: false,
                dataType: "json",
                data: formData,
                success: function (data) {
                    console.log(data);
                },
                error: function () {
                    console.log(data);
                }
            });
        }
    }

    function onEventRendered(args) {
        debugger
        console.log(args);
    }

    function onCellClick(args) {
        args.cancel = true;
    }

    function onCellDoubleClick(args) {
        args.cancel = true;
    }

    function onEventRendered(args) {
        args.cancel = true;
    }

    function onEventClick(args) {
        args.cancel = true;
    }

    function onPopupOpen(e) {
        DataOBJ = e.data;

        $(".CostCenter_Id").change(function () {
            CostCenterID = $(this).val();
            CostCenter = $(this).find(":selected").text();
        });

        $("select.select2").select2({
            placeholder: SelectChoose, allowClear: !0
        });

        $('.CostCenter_Id').val(DataOBJ.CostCenterId).trigger('change');

    }
</script>

@*@(Html.EJS().Schedule("schedule").
        Width("100%")
        .Height("650px")
        .Views(ViewBag.view)
        .ActionBegin("onActionBegin")
        .EventRendered("onEventRendered")
        .PopupOpen("onPopupOpen")
        .EventSettings(new ScheduleEventSettings { DataSource = ViewBag.datasource })
        .EditorTemplate("#EventEditorTemplate")
        .ShowQuickInfo(false)
        .SelectedDate(new DateTime(DateTime.Today.Year, 2, 15)).Render())*@